{"mappings":"I,E,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCIA,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAFmB,SAAS,gBAAgB,CAAC,W,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAEtC,OAAO,CAAC,SAAC,CAAhB,EACE,IAII,EAJE,EAAQ,SAAS,aAAa,CAAC,SAErC,EAAM,YAAY,CAAC,MAAO,EAAM,EAAE,EAIlC,IAAM,EAAiB,EAAM,IAAI,CAC9B,KAAK,CAAC,IACN,SAAS,CAAC,SAAC,CAFd,EAEyB,OAAA,IAAW,EAAO,WAAW,E,GAGpD,EADE,EAAiB,EAEjB,EAAM,IAAI,CAAC,MAAM,CAAC,GAAG,WAAW,GAChC,EAAM,IAAI,CAAC,KAAK,CAAC,EAAG,GACpB,IACA,EAAM,IAAI,CAAC,KAAK,CAAC,GAGjB,EAAM,IAAI,CAAC,MAAM,CAAC,GAAG,WAAW,GAAK,EAAM,IAAI,CAAC,KAAK,CAAC,GAAG,WAAW,GAGxE,EAAM,WAAW,CAAG,EACpB,EAAM,SAAS,CAAC,GAAG,CAAC,eAEpB,EAAM,UAAU,CAAC,YAAY,CAAC,EAAO,GAErC,EAAM,YAAY,CAAC,cAAe,EACpC","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar inputs = _to_consumable_array(document.querySelectorAll(\"input\"));\ninputs.forEach(function(input) {\n    var label = document.createElement(\"label\");\n    label.setAttribute(\"for\", input.id);\n    var labelName;\n    var camelCaseIndex = input.name.split(\"\").findIndex(function(letter) {\n        return letter === letter.toUpperCase();\n    });\n    if (camelCaseIndex > 0) labelName = input.name.charAt(0).toUpperCase() + input.name.slice(1, camelCaseIndex) + \" \" + input.name.slice(camelCaseIndex);\n    else labelName = input.name.charAt(0).toUpperCase() + input.name.slice(1).toLowerCase();\n    label.textContent = labelName;\n    label.classList.add(\"field-label\");\n    input.parentNode.insertBefore(label, input);\n    input.setAttribute(\"placeholder\", labelName);\n});\n\n//# sourceMappingURL=index.4e2ea621.js.map\n","'use strict';\n\nconst inputs = [...document.querySelectorAll('input')];\n\ninputs.forEach((input) => {\n  const label = document.createElement('label');\n\n  label.setAttribute('for', input.id);\n\n  let labelName;\n\n  const camelCaseIndex = input.name\n    .split('')\n    .findIndex((letter) => letter === letter.toUpperCase());\n\n  if (camelCaseIndex > 0) {\n    labelName =\n      input.name.charAt(0).toUpperCase() +\n      input.name.slice(1, camelCaseIndex) +\n      ' ' +\n      input.name.slice(camelCaseIndex);\n  } else {\n    labelName =\n      input.name.charAt(0).toUpperCase() + input.name.slice(1).toLowerCase();\n  }\n\n  label.textContent = labelName;\n  label.classList.add('field-label');\n\n  input.parentNode.insertBefore(label, input);\n\n  input.setAttribute('placeholder', labelName);\n});\n"],"names":["arr","_array_like_to_array","len","length","i","arr2","Array","inputs","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","forEach","input","labelName","label","createElement","setAttribute","id","camelCaseIndex","split","findIndex","letter","toUpperCase","charAt","toLowerCase","textContent","classList","add","parentNode","insertBefore"],"version":3,"file":"index.4e2ea621.js.map"}